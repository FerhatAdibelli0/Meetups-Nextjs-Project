{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\React-Course\\\\23-Nextjs-onwards-to-a-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetailPage from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupsData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        description: \"\",\n        content: props.meetupsData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetailPage, {\n      id: props.meetupsData.id,\n      title: props.meetupsData.title,\n      image: props.meetupsData.image,\n      address: props.meetupsData.address,\n      description: props.meetupsData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://maxpayne35:qGBr7naSXYmEYnw@cluster0.sp51h.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = await client.db();\n  const meetups = await db.collection(\"meetups\").find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://maxpayne35:qGBr7naSXYmEYnw@cluster0.sp51h.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = await client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMettup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupsData: {\n        id: selectedMettup._id.toString(),\n        title: selectedMettup.title,\n        image: selectedMettup.image,\n        address: selectedMettup.address,\n        description: selectedMettup.description\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/React-Course/23-Nextjs-onwards-to-a-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetailPage","MongoClient","ObjectId","Fragment","MeetupDetail","props","meetupsData","title","description","id","image","address","getStaticPaths","client","connect","db","meetups","collection","find","_id","toArray","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","meetupCollection","selectedMettup","findOne"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,uCAA7B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,gCAAzB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,WAAN,CAAkBC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,WAAW,EAAC,EAAlB;AAAqB,QAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,gBAAD;AACE,MAAA,EAAE,EAAEH,KAAK,CAACC,WAAN,CAAkBG,EADxB;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,WAAN,CAAkBC,KAF3B;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACC,WAAN,CAAkBI,KAH3B;AAIE,MAAA,OAAO,EAAEL,KAAK,CAACC,WAAN,CAAkBK,OAJ7B;AAKE,MAAA,WAAW,EAAEN,KAAK,CAACC,WAAN,CAAkBE;AALjC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAG,MAAMF,MAAM,CAACE,EAAP,EAAjB;AACA,QAAMC,OAAO,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,EAAyBC,IAAzB,CAA8B,EAA9B,EAAkC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAlC,EAA8CC,OAA9C,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACJ,GAAP,CAAWO,QAAX;AADJ;AADsB,KAAb,CAAZ,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEA,QAAMZ,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAG,MAAMF,MAAM,CAACE,EAAP,EAAjB;AACA,QAAMe,gBAAgB,GAAGf,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMc,cAAc,GAAG,MAAMD,gBAAgB,CAACE,OAAjB,CAAyB;AACpDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACuB,QAAD;AADuC,GAAzB,CAA7B;AAIA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE;AACXG,QAAAA,EAAE,EAAEsB,cAAc,CAACZ,GAAf,CAAmBO,QAAnB,EADO;AAEXnB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFX;AAGXG,QAAAA,KAAK,EAAEqB,cAAc,CAACrB,KAHX;AAIXC,QAAAA,OAAO,EAAEoB,cAAc,CAACpB,OAJb;AAKXH,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALjB;AADR;AADF,GAAP;AAWD;AAED,eAAeJ,YAAf","sourcesContent":["import MeetupDetailPage from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\n\r\nfunction MeetupDetail(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupsData.title}</title>\r\n        <meta description=\"\" content={props.meetupsData.description}/>\r\n      </Head>\r\n      <MeetupDetailPage\r\n        id={props.meetupsData.id}\r\n        title={props.meetupsData.title}\r\n        image={props.meetupsData.image}\r\n        address={props.meetupsData.address}\r\n        description={props.meetupsData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://maxpayne35:qGBr7naSXYmEYnw@cluster0.sp51h.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = await client.db();\r\n  const meetups = await db.collection(\"meetups\").find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://maxpayne35:qGBr7naSXYmEYnw@cluster0.sp51h.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = await client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const selectedMettup = await meetupCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetupsData: {\r\n        id: selectedMettup._id.toString(),\r\n        title: selectedMettup.title,\r\n        image: selectedMettup.image,\r\n        address: selectedMettup.address,\r\n        description: selectedMettup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}